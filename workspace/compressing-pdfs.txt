
presently, I have about 800 electronic books in my laptop.
they range from quantum field theory to algebraic geometry,
ancient China classics to popular fictions,
from abstruse monologues I have never read to textbooks I am so familiar from cover to cover that I have a trauma with.

I save all of them in PDF, due to the uniquity of the format.
one thing I have been curious is why some PDFs are so compact, which may take some 100 MB to save some 500 pages, and some so bloated, which may take only some 5 MB for the same.
in the beginning of 2020, I found, after a simple search, the site ILovePDF, which can compress PDFs in an unlimited number of times.
indeed, some of the result is very well compressed, while some are less ideal, either remaining bloated or not compressed too much, but there is no parameter to supply manually.
there are other competitors too, but they other problems.
for example, Adobe have an online compression is limited to times;
they intend to lure us it would be ridiculous to pay for Adobe DC just for that.
CutePDF also prints, but the result is often even bigger, and the location of text can be off.

are there some open source tools to do the same?
for one thing, I am not sure whether ILovePDF pollute the file;
for another thing, I would like if there is a method to batch compress with Bash, rather then upload manually to the internet.
I really have in mind to preserve the merticulously chosen PDFs, carefully copied in a USB, to keep with me in person, and even if a meteor is to hit the earth, aliens would after a geological epoch find the stick, and weep for the remains of humanity.

either by my faint memory or another search, I learnt that Ghostscript is just a versatile tool for PDFs.
if I am not mistaken, for color and gray images, it uses discrete cosine transform to compress lossily, which is the core algorithm for JPEG;
for monochrome images, it uses a variable- length Huffman coding to compress losslessly, which is the core alrogithm for CCITT Group 4.
the following options ensures downsampling with Ghostscript.
feel free to chagne these self explanatory parameters.

++gs \++ '
_ ++-sDEVICE=pdfwrite \++ '
_ ++-dCompatibilityLevel=1.7 \++ '
_ ++-dSAFER \++ '
_ ++-dBATCH \++ '
_ ++-dNOPAUSE \++ '
_ ++-dDownsampleColorImages=true \++ '
_ ++-dDownsampleGrayImages=true \++ '
_ ++-dDownsampleMonoImages=true \++ '
_ ++-dColorImageDownsampleThreshold=1.0 \++ '
_ ++-dGrayImageDownsampleThreshold=1.0 \++ '
_ ++-dMonoImageDownsampleThreshold=1.0 \++ '
_ ++-dColorImageResolution=300 \++ '
_ ++-dGrayImageResolution=300 \++ '
_ ++-dMonoImageResolution=300 \++ '
_ ++-sOutputFile=output_file.pdf \++ '
_ ++input_file.pdf++ '

however, it continues to bewilder me that not all ratio is permitted.
it finally resolves my confusion when I read that, when downsampling, Ghostscript does not recognize the bicubic method, but only the subsample method, which is meaningful only for interger ratios.

furthermore, it is not as effective, especially for monochrome images, in which most of my piano scores are saved in.
the reason turns out to be JBig2.
unfortunately, JBig2 is patent protected,
and Ghostscript can’t call it.

another way is to rasterize everything with ImageMagick.

convert -brightnessxcontrast 20x30 file_one.pdf file_two.pdf
convert -threshold 60% file_one.pdf file_two.pdf
convert -monochrome file_one.pdf file_two.pdf

other useful commands include -blur, -sharp, -statistics

yet another tip, though not always effective, is to print to PDF with Xreader (formerly Evince).

the matter sank in my mind for quite a while.
I looked up Arch Linux Wiki to find what calls jbig2enc.
luckily, on Jan 21, 2022, I found Pdfsizeopt, ending my quest perfectly.
often, ILovePDF compresses by 10 to 30 percent.

what is less ideal is the fact that it does not allow to pass compression level.
I am not able to read the code, but it does appear lossless.

~~~

===
@@❧@@ %%January 23, 2021%% '
===

=== ##references## ===

@@❉@@ @@Adobe,@@
   @@‹Adobe Distiller Parameters›@@
   \\https://files.lfpp.csa.canon.com/media/Assets/PDFs/TSS/external/DPS400/Distillerpdfguide_v1_m56577569830529783.pdf\\

@@❉@@ @@Ghostscript,@@
   @@‹High Level Output Devices›@@
   \\https://www.ghostscript.com/doc/current/VectorDevices.htm\\

@@❉@@ @@P Szabó,@@
   @@‹PDF File Size Optimizer›@@
   \\https://github.com/pts/pdfsizeopt\\


===
@@❉@@ @@T Coquand and G Huet, ‹The Calculus of Constructions›.@@ _
   @@«Information and Computation», 1988@@ '