===
%%August 6, 2021:%% '

@@with the library Selenium in Python, it was possible to automatically take screenshots calling a headless Firefox, making it effortless to save double- backup of posts on my site.@@ _
@@it could even take a full- page screenshot, by identifying the@@ ++main++ @@class in my case.@@ '
@@the binary data of the image could be either saved or passed to other function, like the library Pillow.@@ '

@@somehow, I @couldn’t call Chrome;@@
@@there was perhaps some problems with path or version.@@ _
@@besides, to get a screenshot of higher resolution, we @had to zoom in,@@
@@but by far I @didn’t manage to do that either.@@ '

@@in addition, Chinese characters should be shown in Noto Serif,@@
@@but the result was in a sans font,@@
@@and I can’t tell <whether it was Noto Sans or a default font in Windows>.@@ '

@@another problem was <that sometimes Selenium @timed out, or even @failed to locate the ID for the post header, for just certain posts, {which was strange}>.@@ _
@@I therefore @enclosed both the post header and the post content in a div given a class for Selenium to recognize, which greatly improved stability.@@ '
===

///
++#! /usr/bin/env python3++ '
++import os++ '
++import io++ '
++from selenium.webdriver import Firefox++ '
++from PIL import Image++ '
'
++address = "https://www.violapterin.com/"++ '
++os.environ["MOZ_HEADLESS"] = "1"++ '
++driver = Firefox()++ '
++driver.get(address)++ '
++element = driver.find_element_by_tag_name("body")++ '
++binary = element.screenshot_as_png++ '
++driver.quit()++ '
++graph = Image.open(io.BytesIO(binary))++ '
++graph.save("./homepage.png")++ '
///

===
%%August 13:%% '

@@I was a bloody underrated, world- class genius!@@ _
@@I was now able to make a PDF of all blog posts crawled as image.@@ _
@@presently there were about 40 posts,@@
@@and the PDF was already almost 100 page long.@@ '

@@first, as said above, I automatically @saved images of blog posts by Selenium.@@ _
@@the resulting text @appeared blurry,@@
@@but Pillow image processing functions, as@@ ++PIL.ImageEnhance.Contrast++ @@and@@ ++PIL.ImageOps.autocontrast++ @@,@@ @@were helpful.@@ '

@@second, I @sliced pictures line by line, saved to dedicated directories named by date.@@ _
@@to let Pillow recognize the cuts, if you @noticed, I even @added yellow borders to displayed lines and green borders to table rows, all slightly broken with CSS margin.@@ '

@@third, I @patched the slices greedily into pages.@@ _
@@once the present total height @exceeded the page height, I @created a new page.@@ _
@@when every post ends, I @inserted a separation line, and @started patching another post.@@ _
@@Pillow would extend each page with suitable margin.@@ '

@@fourth, I @called ImageMagick via Bash, to convert the pages properly numbered in alphabetical order, into a single PDF.@@ '
===

===
%%August 17:%% '

@@now I @wanted to reduce the noise, {which @blurred the edge of glyphs}.@@ _
@@if the document had &been monochrome, I could have defined a threshold,@@
@@so <that darker pixels over the threshold were &mapped to pure black, and lighter pixels to white>.@@ _
@@however, since it was &colored, such crude process only @gave poor results.@@ _
@@I probably @needed to suggest more converging points in the color space, {which noisy pixels were to be &mapped to}.@@ _

@@more formally, let the document be@@ ^^#P .= .<[:#p :.0]., /6., [:#p :.N .- .1].>^^ @@,@@ @@a list of pixels.@@ _
@@every pixel@@ ^^#p .= .<.x., .y., .z.> <6 #P^^ @@in the RGB color space, is a triple of red, green, and blue.@@ _
@@parameters@@ ^^.x., .y., .z^^ @@#take discrete values in a range, such as@@ ^^.0^^ @@to@@ ^^.2.5.5^^ @@.@@ _
@@for brevity, suppose@@ ^^#p^^ @@is &normalized so that@@ ^^.0 <0 .x., .y.,.z <0 .1^^ @@.@@ '

@@define these quantities:@@ '

^^$q
   .= (.1, .3) .(.x .+ .y .+ .z.).;^^ '
^^$f
   .= ([.2: .x:] .+ [.2: .y:] .+ [.2: .z:], .9 [.2: $q:]).;^^ '
^^$y
   .= ([.3: .x:] .+ [.3: .y:] .+ [.3: .z:], .2.7 [.3: $q:] $f).;^^ '

@@it is clear <that they #form a coordinate>.@@ '
===


~~~

===
@@❧@@ %%started August 6, 2021%% '
===
