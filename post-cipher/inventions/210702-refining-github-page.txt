===
%%June 10, 2021:%% '

@@interpretation of the generation of “Photoluminescence” @succeeded!@@ '

@@different CSS classes accounted for normal, italic, bold texts.@@ _
@@I could also set up indentation, alignment, separating line, and colored background for category names.@@ _
@@as for the font, I @use Alegreya and the accompanying Alegreya Sans, since I was rather fascinated by its somewhat old- fashioned but fancy strokes.@@ '

@@the image links in the footer for social media was more difficult to achieve.@@ _
@@a solution is the CSS background rule,@@
@@and we @had to remember to adjust its width and height to avoid unwanted blank space.@@ '
===

///
++.icon-gmail {++ '
_ ++background: url("/asset/icon-gmail.png") no-repeat;++ '
_ ++display: inline-block;++ '
_ ++background-size: contain;++ '
++}++ '
///

===
%%June 15:%% '

@@as an easter egg, the quote in the footer was to be chosen randomly by a script.@@ _
@@suppose the quote element @had ID@@ ++#quote++ @@,@@ @@then the following script would do the job.
===

///
++var texts= [`The first quote`, `The second quote`, `The third quote`];++ '
++var choice = Math.floor(Math.random() * texts.length);++ '
++document.getElementById("quote").innerHTML = texts[choice];++ '
///

===
%%June 16:%% '

@@CSS colors could be called by semantic names, like@@ ++mediumaquamarine++ @@and@@ ++midnightblue++ @@,@@ @@{which was a lot more readable than HEX color codes}.@@ '
===

===
%%June 17:%% '

@@ @enhanced responsive design.@@ _
@@I @learnt <that font sizes, among other things, could be adapted with respect to the screen width>, as shown in the code below.@@ '
===

///
++body { font-size: 24px; }++ '
++@media screen and (max-width: 600px) {++ '
_ ++body { font-size: 20px; }++ '
++}++ '
++@media screen and (max-width: 400px) {++ '
_ ++body { font-size: 16px; }++ '
++}++ '
///

===
%%July 4:%% '

@@while the Mathjax 3 documentation isn’t yet very &refined, it is instructive now to copy <what configuration @worked for me>.@@ _
@@we could choose to render math in SVG, {which is &saved in image}, or CHTML, {which $calls web fonts}.@@ _
@@moreover, we could specify precisely those CSS classes {in which Mathjax is &called}.@@ '
===

///
++MathJax = {++ '
_ ++loader: {++ '
_ _ ++load: ['input/tex', 'output/svg']++ '
_ ++},++ '
_ ++tex: {++ '
_ _ ++inlineMath: [['\\(', '\\)']],++ '
_ _ ++displayMath: [['\\[', '\\]']]++ '
_ ++},++ '
_ ++options: {++ '
_ _ ++processHtmlClass: ["math"],++ '
_ _ ++ignoreHtmlClass: ["body"]++ '
_ ++}++ '
++};++ '
///

===
%%July 6:%% '

@@previously, I @decided to break math expressions into individual spans when parsing them, since Mathjax 3 @had no word break.@@ _
@@the spacing wasn’t quite right.@@ _
@@my workaround was to add@@ ++\,++ @@,@@ ++\:++ @@,@@ @@and@@ ++\;++ @@,@@ @@in the LaTeX source, and to remove whitespace between these spans.@@ '
===

===
%%July 27:%% '

@@ @numbered all posts with respect to the stamp.@@ _
@@it simply @amounted to copy the list of posts, and add a counter in each title.@@ _
@@now the slowly increasing numbering @made me proud.@@ '
===

===
%%July 28:%% '

@@the original profile and the banner picture has oxygen to be blue, and nitrogen red.@@ _
@@Leyi @told me <that according to CPK coloring, {which is a chemistry standard}, oxygen should be red, and nitrogen blue>.@@ _
@@I @redrew the profile following such coloring,@@
@@and @redesigned the banner picture altogether.@@ _
@@now on the banner were mostly colored, aromatic chemicals, hinting the title “Photoluminescence”.@@ '
===

===
%%July 28:%% '

@@word break had &been a serious problem in web designing.@@ _
@@it was the tradition in typography to justify text,@@
@@but it was generally &discouraged to do so in web programming.@@ _
@@the reason is <that web browsers couldn’t reliably break words in real time>,@@
@@and if we #insist justification of text, spaces could be too big.@@ '

@@after a long thought, I @maintained to justify, as I really @liked the lofty look of a justified text.@@ _
@@to alleviate the problem, I @used a media query to switch to left alignment when the screen is less than 600 px.@@ _
@@furthermore, word breaking opportunity,@@ ++<wbr>++ @@,@@ @@would be inserted.@@ _
@@to do so for text, we could single out a word, and @broke at punctuations whenever possible;@@
@@if not possible, we #broke at vowels;@@
@@if not possible either, we simply #broke at the middle of the word.@@ _
@@do the same for code, except for breaking at alphabets.@@ _
@@we could look up a list of characters, {at which words might be broken}, ordered in decreasing priority.@@ _
@@for instance, it was better to break at period@@ ++.++ @@than at hyphen@@ ++-++ @@.@@  '
===

===
%%July 28:%% '

@@with the library Selenium in Python, it was possible to automatically take screenshots calling a headless Firefox, making it effortless to save double- backup of posts on my site.@@ _
@@it could even take a full- page screenshot, by identifying the@@ ++main++ @@class in my case.@@ '
@@the binary data of the image could be either saved or passed to other function, like the library Pillow.@@ '

@@somehow, I @couldn’t call Chrome;@@
@@there was perhaps some problems with path or version.@@ _
@@besides, to get a screenshot of higher resolution, we @had to zoom in,@@
@@but by far I @didn’t manage to do that either.@@ _
@@in addition, Chinese characters should be shown in Noto Serif,@@
@@but the result was in a sans font,@@
@@and I can’t tell <whether it was Noto Sans or a default font in Windows>.@@ '
===

///
++#! /usr/bin/env python3++ '
++import os++ '
++import io++ '
++from selenium.webdriver import Firefox++ '
++from PIL import Image++ '
'
++address = "https://www.violapterin.com/"++ '
++os.environ["MOZ_HEADLESS"] = "1"++ '
++driver = Firefox()++ '
++driver.get(address)++ '
++element = driver.find_element_by_tag_name("body")++ '
++binary = element.screenshot_as_png++ '
++driver.quit()++ '
++graph = Image.open(io.BytesIO(binary))++ '
++graph.save("./homepage.png")++ '
///

~~~

===
@@❧@@ %%started July 2, 2021%% '
===

=== ##references## ===

===
@@❉@@ @@MDN Web Docs,@@
   @@‹Colors›@@
   \\https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\\ '
@@❉@@ @@MDN Web Docs,@@
   @@‹Specificity›@@
   \\https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity\\ '
@@❉@@ @@World Wide Web Consortium,@@
   @@‹Markup Validation Service›@@
   \\https://validator.w3.org\\ '
===
