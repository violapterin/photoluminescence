===
%%August 5, 2020:%% '

@@this was %embarassing:@@ _
@@I @learned what I should have known by day one: I could totally disable Jekyll to make it a static site.@@ _
@@I @knew <that when Jekyll was &run, GitHub automatically generated the site again in the server end>.@@ _
@@but I @didn’t know if there was a empty file@@ ++.nojekyll++@@,@@ @@GitHub no longer ran Jekyll, but it simply recognized@@ ++index.html++@@,@@ @@and serve the site accordingly.@@ _
@@it suddenly looked feasible to design a custom format, and generate HTML- with- LaTeX myself.@@ '
===

===
%%August 6%% '

@@surprisingly, as I @tested for several simple cases, most browsers @didn’t support MathML, including even Chrome and Safari.@@ _
@@that crossed out MathML as the framework for my new notation.@@ '

@@if I @used a more linear notation, as Peano did, {which fell in the realm of HTML and CSS}, I might solve the problem by not creating it.@@ _
@@OK, brace yourself for a even more unconventional notation!@@ '

@@this way, I only @had to mimic fractions and matrices, possibly by drawing a horizontal line between items, and a outermost vertical line surrounding them all.@@ _
@@then I soon @discovered <that@@ ++<p>++ @@ @didn’t allow block- level tags like@@ ++<table>++ @@or@@ ++<div>++ @@>!@@ '
===

===
%%August 7%% '

@@important realization!@@ _
@@HTML@@ ++<p>++ @@may contain several lines separated by@@ ++<br>++ @@and stacked vertically, if grouped by a@@ ++<span>++@@.@@ _
@@moreover, the CSS@@ ++border-left++@@,@@ ++border-right++@@,@@ ++border-top++@@,@@ @@and@@ ++border-bottom++ @@may serve as traditional mathematical brackets.@@ _
@@they may be colored, scaled, or thickened as I @wished, by a suitable class.@@ _
@@this would perhaps suffice for my revolution of notation.@@ '
===

===
%%August 8%% '

@@implementing a Markdown parser will not be an easy task, as to me, Markdown wasn’t an elegant markup.@@ _
@@the earliest proposal of Markdown by John Gruber was sometimes ambiguous.@@ _
@@for example,@@ ++*italic __bold*__++ @@can be either a italic or a bold, depending on the precedence.@@ _
@@afterwards John MacFarlane proposed CommonMark, and implemented a PEG grammar.@@ _
@@to make things more complicated, I wasn’t sure whether GitHub- Flavored Markdown had a PEG (parsing expression grammar) or a BNF (Backus–Naur form).@@ _
@@recall <that it was well &known <that whether a language was unambiguous was undecidable>, in general>.@@ '

@@or it may be more reasonable to first design a subset of the markup, {which was context- free}.@@ _
@@it should encompass Markdown with Kramdown.@@ _
@@at this stage I @converted the source to Markdown, and generate via Jekyll.@@ _
@@then when I had a better grasp of computation theory, I @finished the rest {which was recursively enumerable}, perhaps as strong as HTML5.@@ _
@@when that was &done, I @stopped using Markdown and Jekyll altogether.@@ _
@@still, I @didn’t know how to show rigorously the two parts of the project are theoretically consistent, and I @got confused.@@ '
===

===
%%August 12%% '

@@tested CSS-span-fractions, okay.@@ _
@@discovered CSS grids, {which might be superior to@@ ++table++@@}.@@ _
@@came up with the artificial square brackets made of@@ ++span++@@.@@ '
===

///
_ ++.v, .v-b, .v-l, .v-r, .v-l-r {++ '
_ ++display: inline-block;++ '
_ ++vertical-align: middle;++ '
++}++ '
++.v-b { border-bottom: thin dotted black;}++ '
++.v-l { border-left: thin dotted black;}++ '
++.v-r { border-right: thin dotted black;}++ '
++.v-l-r { border-left: thin dotted black; border-right: thin dotted black;}++ '
'
++<span class="v-l-r">++ '
_ ++<span class="v-b">++ '
_ _ ++<span class="v-r">++ '
_ _ _ ++<span class="v-b"> a </span> <br>++ '
_ _ _ ++<span class="v"> b </span>++ '
_ _ ++</span>++ '
_ _ ++- <span class="v"> cd </span>++ '
_ ++</span> <br>++ '
_ ++<span class="v"> x+y+z </span>++ '
++</span>++ '
///

===
%%August 14:%% '

@@realized <that an expression was really a tree>.@@ _
@@if I @chose prefix form always, there would be no parsiing problem, like Lisp does.@@ _
@@later today, my friend Authur Lin coincidentally posted a link talking about prefix-infix-postfix transformation, because I @brought up the topic of obelus sign.@@ _
@@this helped me further clarify the tree image, and came up with a interpretation of the transformation.@@ _
@@the design of esoteric language Jelly (inspired by J and APL in turn) was very instructive in its tacit function notation.@@ '
===

=== ##Source## ===

===
@@A grammar for HTML5@@ \\http://trevorjim.com/a-grammar-for-html5\\
===

~~~

===
%%late August, 2020.%%
===