===
@@this note $summarizes the steps to install Arch Linux.@@ _
@@I #don’t intend to explain everything,@@
@@and the wording is as concise as possible.@@ _
@@do tell me if you find anything no longer working now, or any link broken.@@ '
===

=== ##Partition and formatting## ===

===
@@download the Arch Linux ISO,@@
@@and make a bootable USB.@@ _
@@on Windows, we may use the application Rufus.@@ _
@@on Mac, we #have to format the USB first, and copy the ISO into it by using utility@@ ++dd++ @@.@@ '

@@plug in the bootable USB,@@ _
@@then enter the firmware interface.@@ _
@@before the computer $starts normally, there will be a notice like “Please press DEL or F2 to enter UEFI BIOS setting”.@@ _
@@do that immediately to enter a temporary@@ ++zsh++ @@shell, with prompt@@ ++root@archiso ~ #++ @@.@@ _
@@from now on, a@@ ++#++ @@sign $indicates the shell prompt.@@ '

@@list the disk blocks:@@ '

++# lsblk++ '

@@the largest block should be your hard disk, {which is likely &called@@ ++sda++ @@}.@@ _
@@a smaller one is the bootable USB we are %using,@@
@@and a still smaller one is the ROM.@@ '

@@to partition the hard disk, invoke the command line utility@@ ++parted++ @@:@@ '

++# parted /dev/sda++ '

@@here, the prompt@@ ++(parted)++ @@will be shown for clarity.@@ _
@@create a partition table with the MSDOS (MBR) standard:@@ '

++(parted) mklabel msdos++ '

@@meanwhile, UEFI/GPT partition is a newer standard, {which not every motherboard supports}.@@ _
@@partitioning commands for UEFI/GPT are similar.@@ '

@@my Lenovo Thinkpad currently used $has 1TB,@@
@@and we shall generously allocate 40GB for@@ ++/++ @@(the root directory except for the user’s home), 2GB for swap memory, and the rest for@@ ++/home/++ @@(the user’s home).@@ _
@@nowadays computers often have a large RAM (mine $has 4GB),@@
@@and 2GB of swap memory shall be more than enough.@@ '

@@create partition for the root directory except for home:@@ '

++(parted) mkpart primary ext4 1MiB 40GiB++ '

@@set the boot flag to be true:@@ '

++(parted) set 1 boot on++ '

@@create the partition for swap memory:@@ '

++(parted) mkpart primary linux-swap 40GiB 42GiB++ '

@@finally create the partition for the home, making up the rest of the hard disk:@@ '

++(parted) mkpart primary ext4 42GiB 100%++ '

@@in the steps above, if the requested partition can’t be made precisely as such,@@
@@an alternative suggestion will be prompted.@@ _
@@you might be asked again of the point of start and end, and of the file system.@@ _
@@I just @applied default for everything.@@ _
@@you might also be warned <that@@ ++The resulting partition is not properly aligned for best performance++ @@>,@@ @@{which we may ignore}.@@ '

@@print a summary of each partition to double check:@@ '

++(parted) print++ '

@@my report $has <that@@ ++sda1++ @@is the root directory except home,@@ ++sda2++ @@the swap memory,@@ ++sda3++ @@the root’s home>.@@ _
@@quit if everything $looks fine:@@ '

++(parted) quit++ '

@@format partitions intended for root directory:@@ '

++# mkfs.ext4 /dev/sda1++ '

@@mount the root directory:@@ '

++# mount /dev/sda1 /mnt++ '

@@to mount the home, create the directory,@@
@@then mount it:@@ '

++# mkdir /mnt/home++ '
++# mount /dev/sda3 /mnt/home++ '
===

=== ##Language and location## ===

===
@@for the rest, temporarily take@@ ++/mnt++ @@to be the root directory, where Arch Linux will be installed:@@ '

++# arch-chroot /mnt++ '

@@I @chose American English to be the default for system display,@@
@@and install Chinese input methods.@@ _
@@to do so, edit@@ ++/etc/locale.gen++ @@,@@
@@and uncomment before the line@@ ++en_US.UTF-8 UTF-8++ @@and@@ ++zh_TW.UTF-8 UTF-8++ @@.@@ _
@@then,@@ ++locale-gen++ @@will generate necessary information for all languages enabled,@@
@@and@@ ++locale.conf++ @@$specifies system display:@@ '

++# locale-gen++ '
++# echo "LANG=en_US.UTF-8" > /etc/locale.conf++ '
++# export LANG=en_US.UTF-8++ '

@@to type Chinese, I @had to install the input method framework Ibus (package@@ ++ibus++ @@)@@ @@and the input method Rime (package@@ ++ibus-rime++ @@).@@ _
@@to initiate them at startup, add these lines into@@ ++~/.xinitrc++ @@:@@ '

++export GTK_IM_MODULE=ibus++ '
++export XMODIFIERS=@im=ibus++ '
++export QT_IM_MODULE=ibus++ '
++ibus-daemon -drx++ '

@@select the time zone:@@ '

++# tzselect++ '

@@in my case this is@@ ++4) Asia++ @@,@@ @@and@@ ++43) Taiwan++ @@.@@ _
@@to be sure, its very existence of this item is a reassurance.@@ '

@@create a symlink from the shared directory to the system configuration directory:@@ '

++# ln -s /usr/share/zoneinfo/Asia/Taiwan > /etc/localtime++ '

@@set the hardware clock:@@ '

++# hwclock --systohc --utc++ '
===

=== ##Setting up the Internet## ===

===
@@assuming a working connection, we #set up DHCP (Dynamic Host Configuration Protocol):@@ '

++# ip link++ '

@@the first item in the output is, in my case:@@ '

++1: lo:mtu 65536 qdisk noqueue state UNKNOWN mode DEFAULT group default qlen 1000++ '
++link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00++ '

@@let the DHCP service start now, and whenever the system boots.@@ _
@@replace@@ ++______++ @@with the name of wired device just seen above (mine is@@ ++lo++ @@):@@ '

++# systemctl start dhcpcd@______.service++ '
++# systemctl enable dhcpcd@______.service++ '

@@replace@@ ++Host-Name++ @@with your host name:@@ '

++# echo "Host-Name" > /etc/hostname++ '

@@set the root’s password:@@ '

++# passwd++ '

@@we may now leave the@@ ++chroot++ @@environment,@@
@@unmount the corresponding partition,@@
@@and schedule shutdown:@@ '

++# exit++ '
++# umount -R /mnt++ '
++# shutdown++ '

@@unplug the USB,@@
@@restart,@@
@@and login as@@ ++root++ @@.@@ '
===

=== ##Essential packages## ===

===
@@now the internet connection is required,@@
@@and it is best <that you have ethernet automatically connected>.@@ _
@@otherwise, you have to set it in command line, {which is not &covered here}.@@ _
@@alternatively, you may use a Wifi (not covered here either).@@ _
@@we may test the connection with@@ ++ping++ @@:@@ '

++# ping -c 3 www.google.com++ '

@@edit the list of mirrors, so <that closer servers are &preferred>@@ _
@@(you may want to use@@ ++nano++ @@if you are unfamiliar with@@ ++vi++ @@):@@ '

++# vi /etc/pacman.d/mirrorlist++ '

@@install the base packages, {which will take quite a while, about twenty minutes in my case}:@@ '

++# pacstrap -i /mnt base base-devel++ '

@@generate and write the@@ ++fstab++ @@file, {which $specifies the mounted partitions}:@@ '

++# genfstab -U /mnt > /mnt/etc/fstab++ '

@@create a user account to be used on a daily basis,@@
@@add the ID (mine is@@ ++violapterin++ @@)@@ @@into the wheel group having sudo privileges,@@
@@and set the password:@@ '

++# useradd -m -G wheel,users -s /bin/bash violapterin++ '
++# passwd violapterin++ '

@@install package@@ ++sudo++ @@to get superuser privilege,@@
@@then edit the@@ ++sudoers++ @@file.@@ _
@@this file is special,@@
@@so we #have to specify the editor:@@ '

++# EDITOR=vi visudo++ '

@@uncomment the line below by deleting the@@ ++#++ @@sign:@@ '

++%wheel ALL=(ALL) ALL++ '

@@make stable repositories available to package manager ++pacman++.@@ _
@@to do so, open@@ ++/etc/pacman.conf++ @@,@@ @@and uncomment these lines:@@ '

++[multilib]++ '
++Include = /etc/pacman.d/mirrorlist++ '

@@update@@ ++pacman++ @@,@@
@@and install all refreshed packages@@
@@(flags@@ ++-Syu++ @@$means respectively installing packages, refreshing the database, and checking outdated packages):@@ '

++# sudo pacman –Syu++ '

@@besides the official repository {that@@ ++pacman++ @@uses}, there is another Arch User Repository (AUR) maintained by community.@@ _
@@we #need other helpers to install AUR packages, including@@ ++yay++ @@,@@ ++pakku++ @@,@@ ++pikaur++ @@,@@ @@and@@ ++pacaur++ @@.@@ _
@@the flag@@ ++-S++ @@also $means installation.@@ '
===

=== ##Desktop and the graphical interface## ===

===
@@it $remains to set up a desktop environment.@@ _
@@we #install the X-server@@ ++xorg-server++ @@and@@ ++xorg-server-utils++ @@.@@ _
@@check which graphic card the current system is %using:@@ '

++# lspci -v++ '

@@since my computer @had an Intel GPU, I @had to install@@ ++xf86-video-intel++ @@.@@ _
@@as for desktop, I @chose KDE, and @installed packages@@ ++plasma++ @@and@@ ++kde-applications++ @@,@@ @@which @took nearly thirty minutes.@@ _
@@afterwards, we #configure@@ ++.xinitrc++ @@{that $calls KDE on startup}.@@ _
@@log in as the daily user’s account, and write this line:@@ '

++# echo "exec startkd>" > ~/.xinitrc++ '

@@here@@ ++.xinitrc++ @@must be saved in the daily user’s home in order to be found.@@ _
@@even so, KDE will only be started after@@ ++startx++ @@command is &run.@@ _
@@to start KDE immediately after logged in, install package@@ ++xorg-xinit++ @@.@@ _
@@put these lines in@@ ++~/.bashrc++ @@:@@ '

++if [ -z "$DISPLAY" ] && [ -n "$XDG_VTNR" ] && [ "$XDG_VTNR" -eq 1 ]; then++ '
_ _ ++exec startx++ '
++fi++ '

@@this $means {that we #start the X server, if the display variable is not null, and if there is more than one terminal instance}.@@ '

@@in the presence of a beautiful GUI, instead of the scary monochrome console, I am sure the readers will figure out the rest.@@ '
===

~~~

===
%%March 17, 2017.%% _
%%revised June 24, 2021.%% '
===

=== ##References## ===

===
@@Arch Linux Wiki,@@ @@‹Installation Guide›@@ \\https://wiki.archlinux.org/title/Installation_guide\\ '
@@Arch Linux Wiki,@@ @@‹List of applications›@@ \\https://wiki.archlinux.org/title/List_of_applications\\ '
@@Arch Linux Wiki,@@ @@‹Desktop environment›@@ \\https://wiki.archlinux.org/title/desktop_environment\\ '
===
